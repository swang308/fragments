# .github/workflows/ci.yml

# Continuous Integration (CI) Workflow
# This workflow runs on every pull request and push to the master branch.

name: ci

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  # Linting job to check code quality with ESLint
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4 
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' 
          cache: 'npm' 
      - name: Install dependencies
        run: npm ci 
      - name: Run ESLint
        run: npm run lint 

  # Dockerfile linting to ensure Dockerfile best practices
  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4 
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile 

  # Unit tests to verify the functionality of code
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4 
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*' 
          cache: 'npm' 
      - name: Install and run tests
        run: npm install-ci-test 

  # Integration tests to verify how components work together
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4 
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*' # Use the latest LTS version of Node.js
          cache: 'npm' 
      - name: Install dependencies
        run: npm install 
      - name: Build containers
        run: docker compose up -d 
      - name: Setup local AWS resources
        run: ./scripts/local-aws-setup.sh 
      - name: Run integration tests
        run: npm run test:integration 

  # Build and push Docker images to Docker Hub
  docker-hub:
    name: Build and Push to Docker Hub
    needs: [lint, dockerfile-lint, unit-tests, integration-tests] 
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }} 
      - name: Build and push Docker images
        env:
          DOCKERHUB_REPO: swang308/fragments 
          SHA_TAG: sha-${{ github.sha }} 
        uses: docker/build-push-action@v4
        with:
          push: true # Push the built images
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}, ${{ env.DOCKERHUB_REPO }}:main, ${{ env.DOCKERHUB_REPO }}:latest
